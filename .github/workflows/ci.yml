name: CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

permissions:
  contents: read

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  lint:
    name: Lint (pylint)
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Run pylint
        run: |
          pylint controller.py model.py view.py constants.py tests

  tests:
    name: Tests (pytest + coverage)
    runs-on: ubuntu-latest
    needs: lint
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install coverage
      - name: Run tests
        run: |
          coverage run -m pytest -q
          coverage xml
          coverage report -m
      - name: Upload coverage artifact
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  build-windows:
    name: Build (Windows exe)
    runs-on: windows-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build executable (PyInstaller)
        run: |
          pyinstaller "invoice_manager.spec" --clean --noconfirm
      - name: Upload dist artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-dist
          path: dist/

  build-linux:
    name: Build (Linux wheel fallback)
    runs-on: ubuntu-latest
    needs: tests
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'
      - name: Install build deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install build
      - name: Build sdist & wheel
        run: |
          python -m build --sdist --wheel --outdir dist
      - name: Upload package artifacts
        uses: actions/upload-artifact@v4
        with:
          name: python-packages
          path: dist/
